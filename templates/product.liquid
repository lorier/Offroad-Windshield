<!-- /templates/product.liquid -->
{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<div itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {% assign current_variant = product.selected_or_first_available_variant %}

  {% include 'breadcrumb' %}

  <div class="grid product-single">
    <div class="grid__item large--one-half">
      <div class="product-single__photos" id="ProductPhoto">
        {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
        <img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" id="ProductPhotoImg">
      </div>
      {% comment %} <div class="fb-like" data-href="https://www.facebook.com/offroadwindshield" data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>{% endcomment %}
      {% comment %}http://camgould.com/blog/posts/handy-lite-shopify-sharing-code{% endcomment %}
      <ul class="social-sharing inline-list">
          <li>Share this!</li>
          <li title="Share on Twitter" >
            <a target="_blank" href="https://twitter.com/intent/tweet?text={{ product.title | truncate: 30 }}&url=http%3A%2F%2F{{ shop.domain }}{{ product.url | replace: '/', '%2F' }}">
                <i class="icon icon-twitter"></i>
            </a>
          </li>
          <li title="Share on Facebook" ><a target="_blank" href="http://www.facebook.com/sharer/sharer.php?u=http://{{ shop.domain }}{{ product.url }}"><i class="icon icon-facebook"></i></a></li>
          <li title="Share on Google+" ><a target="_blank" href="https://plus.google.com/share?url=http://{{ shop.domain }}{{ product.url }}"><i class="icon icon-google"></i></a></li>
          <li title="Share on Pinterest" ><a target="_blank" href="http://pinterest.com/pin/create/button/?url=http://{{ shop.domain }}{{ product.url }}&description={{ product.description | strip_html | truncate: 240 }}&media={{ product.featured_image.src | product_img_url: 'large' }}"><i class="icon icon-pinterest"></i></a></li>
          </ul>
      {% comment %}
        Create thumbnails if we have more than one product image
      {% endcomment %}
      {% if product.images.size > 1 %}
        <ul class="product-single__thumbnails grid-uniform" id="ProductThumbs">

          {% for image in product.images %}
            <li class="grid__item one-quarter">
              <a href="{{ image.src | img_url: 'large' }}" class="product-single__thumbnail">
                <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
              </a>
            </li>
          {% endfor %}

        </ul>
      {% endif %}
    </div>

    <div class="grid__item large--one-half">

      <h1 itemprop="name">{{ product.title }}</h1>
      <div class="product-description rte" itemprop="description">
        {{ product.description }}
      </div>
      <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}">

        <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

        {% comment %}
          ID addToCartForm is a selector for the ajax cart plugin
        {% endcomment %}
        <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">

          {% comment %}
            Add product variants as a dropdown.
              - By default, each variant (or combination of variants) will display as its own <option>
              - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

            You can leverage jQuery to add a callback on page load and each time the select element changes:
              - Include option_selection.js (as seen at the bottom of this file)
              - This allows you to use JavaScript anytime the variant dropdown changes
              - This also separates out your variant options (ie. size, color, etc.) to separate select elements

            For more information on products with multiple options, visit:
              - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
          {% endcomment %}
          <select name="id" id="productSelect" class="product-single__variants">
            {% for variant in product.variants %}
              {% if variant.available %}

                {% comment %}
                  Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                {% endcomment %}
               
               <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>
            
           {% comment %}     <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>{% endcomment %}
               

              {% else %}
                <option disabled="disabled">
                  {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                </option>
              {% endif %}
            {% endfor %}
          </select>
            {% comment %} via https://ecommerce.shopify.com/c/ecommerce-design/t/adding-extra-products-via-a-checkbox-on-a-product-page-47020
            // Establish which collection this product belongs to, if it belongs to the "accessories" collection, return false, else return true.
            {% endcomment %}
            
            {% assign found = false %}
            {% for acollection in product.collections %}
              {% if acollection.handle == 'accessories' %}
                {% assign found = true %}
              {% endif %}
            {% endfor %}
            {% if found == false %}
            {% comment %} // If the current product isn't in the "accessories" collection then output the extra products list
            {% endcomment %}
            {% comment %}<div id="accessories"> 
              <h3>Choose options to be added to basket</h3>
              <ul>
              {% for product in collections.accessories.products %}
              {% if product.id == 2618196739 %}
                <li>
                  <input type="checkbox" name="id[]" data-id="7648148227" /> {{ product.title }} - {{ product.price | money }} (<a href="{{ product.url }}" target="_blank" title="More details on {{ product.title }}">details</a>)
                </li>
                {% endif %}
              {% endfor %}
              </ul>
            </div>{% endcomment %}
            {% endif %}
          <div class="price-wrapper">
            <span id="ProductPrice" class="h2" itemprop="price">
              {{ current_variant.price | money }}
            </span>

            {% comment %}
            {% if product.compare_at_price_max > product.price %}
              <p id="ComparePrice">
                {{ 'products.product.compare_at' | t }} {{ current_variant.compare_at_price | money }}
              </p>
            {% endif %}
            {% endcomment %}


          {% comment %} 
          <label for="Quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
          <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">
          {% endcomment %}

          <button type="submit" name="add" id="AddToCart" class="btn">
            <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
          </button>
          </div>
        
        </form>

      </div>

    </div>
  </div>

</div>
<div class="grid">
  <div class="grid__item large--one-whole">
  {% if product.type != 'Accessories' %}
  <h4 class="cross-sell">You May Also Like</h4>
  </div>
    {% for product in collections.accessories.products %}
        <div class="grid__item large--one-third medium--one-whole">
        <div class="img-wrapper">
          <a class="over" href="{{product.url}}">
              <img class="centered img-center" src="{{ product.featured_image | img_url: 'large' }}"/>
          </a>
        </div>
        <p>{{product.title}} <strong> {{product.price | money }}</strong></p>
        </div>
      {% endfor %} 
    {% endif %}
  </div>



{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });
    // LR Added via tutorial here https://docs.shopify.com/support/your-website/themes/how-to-add-a-pick-an-option-to-drop-downs 
    {% if product.variants.size > 1 %}
      {% for option in product.options %}
        $('.single-option-selector:eq({{ forloop.index0 }})')
          .filter(function() { return $(this).find('option').size() > 1  } )
          .prepend('<option value="">Choose your ' + {{ product.options[forloop.index0] | json }} + '</option>')
          .val('')
          .trigger('change');
      {% endfor %}
    {% endif %}
    //hooking up add-on
    // $('.year-options .single-option-selector')
    //       .trigger('change');

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
